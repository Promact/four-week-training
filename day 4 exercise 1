using System;
using System.Collections.Generic;

class Stack<T>
{
    private List<T> items = new List<T>();

    public void Push(T item)
    {
        items.Add(item);
    }

    public T Pop()
    {
        if (IsEmpty)
        {
            throw new InvalidOperationException("The stack is empty.");
        }

        int lastIndex = items.Count - 1;
        T item = items[lastIndex];
        items.RemoveAt(lastIndex);
        return item;
    }

    public bool IsEmpty
    {
        get { return items.Count == 0; }
    }
}

class Program
{
    static void Main(string[] args)
    {
        Stack<int> intStack = new Stack<int>();
        intStack.Push(1);
        intStack.Push(2);
        intStack.Push(3);

        Console.WriteLine("Popped: " + intStack.Pop());
        Console.WriteLine("Popped: " + intStack.Pop());
        Console.WriteLine("Is Empty: " + intStack.IsEmpty);

        Stack<string> stringStack = new Stack<string>();
        stringStack.Push("Hello");
        stringStack.Push("World");

        Console.WriteLine("Popped: " + stringStack.Pop());

        Stack<Person> personStack = new Stack<Person>();
        personStack.Push(new Person("John", 30));
        personStack.Push(new Person("Jane", 25));

        Console.WriteLine("Popped: " + personStack.Pop());

        Console.ReadKey();
    }
}

class Person
{
    public string Name { get; set; }
    public int Age { get; set; }

    public Person(string name, int age)
    {
        Name = name;
        Age = age;
    }

    public override string ToString()
    {
        return $"{Name} ({Age} years old)";
    }
}
